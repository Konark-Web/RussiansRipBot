import logging

from aiogram import types, Dispatcher

from bot.db.models import Chat

log = logging.getLogger(__name__)


async def chat_status(update: types.ChatMemberUpdated):
    log.info(update)
    db_session = update.bot.get("db")

    if update.new_chat_member.status == 'left':
        async with db_session() as session:
            chat: Chat = await session.get(Chat, {'chat_id': update.chat.id})
            chat.status = False

            await session.commit()

        return

    await update.bot.send_message(update.chat.id,
                                  f'–ü—Ä–∏–≤—ñ—Ç, –≤—Å—ñ–º! –†–∞–¥–∏–π –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ {update.chat.title}!\n'
                                  f'–Ø –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –±—É–¥—É –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –≤ —á–∞—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä—É—Å–Ω—ñ '
                                  f'—è–∫–∞ –∑—Ä–æ–±–∏–ª–∞ –∂–µ—Å—Ç –¥–æ–±—Ä–æ—ó –≤–æ–ª—ñ —Ç–∞ —Å—Ç–∞–ª–∞ "—Ö–æ—Ä–æ—à–∏–º–∏ —Ä—É—Å—Å–∫–∏–º–∏" üòÅ\n\n'
                                  f'–°–ª–∞–≤–∞ –ó–°–£! üá∫üá¶')
    await update.bot.send_animation(update.chat.id, 'https://i.imgur.com/AHFxtrN.mp4')

    async with db_session() as session:
        await session.merge(Chat(chat_id=update.chat.id))
        await session.commit()


async def migrate_to_supergroup(message: types.Message):
    db_session = message.bot.get("db")

    async with db_session() as session:
        chat: Chat = await session.get(Chat, {'chat_id': message.migrate_from_chat_id})
        chat.chat_id = message.chat.id

        await session.commit()

    await message.bot.send_message(message.chat.id,
                                   f'–í–∞—à–∞ –≥—Ä—É–ø–∞ —Ç–µ–ø–µ—Ä —Å—Ç–∞–ª–∞ —Å—É–ø–µ—Ä-–≥—Ä—É–ø–æ—é, –∞–ª–µ –≤—Å–µ –¥–æ–±—Ä–µ, —è —Ü–µ –ø–æ–∑–Ω–∞—á–∏–≤ —Å–æ–±—ñ.\n\n'
                                   f'–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ!')


def register_updates(dp: Dispatcher):
    dp.register_my_chat_member_handler(chat_status)
    dp.register_message_handler(migrate_to_supergroup, content_types=types.ContentType.MIGRATE_FROM_CHAT_ID)
